require 'ciat'
require 'ciat/processors/java'
require 'ciat/processors/parrot'

task :default => :ciat

def classpath
  Dir.glob('../lib/*.jar').join(':') + ":../bin"
end

def compiler
  CIAT::Processors::Java.new(classpath,
    'org.norecess.hobbes.drivers.PIRCompilerCLI') do |compiler|
    compiler.kind = CIAT::Processors::Compiler.new
    compiler.description = 'Hobbes Compiler'
  end
end

def interpreter
  CIAT::Processors::Java.new(classpath, 
    'org.norecess.hobbes.drivers.InterpreterCLI') do |executor|
    executor.description = 'Hobbes Interpreter'
  end
end

def executor
  CIAT::Processors::Parrot.new do |executor|
    executor.description = 'PIR VM'
    executor.kind = CIAT::Processors::CompilationInterpreter.new
    executor.libraries = ["../pirlib"]
  end
end

desc "run both the interpreter and compiler tests"
task :ciat do
  ex = nil
  begin
    Rake::Task['ciat:interpreter'].invoke
  rescue Exception => e
    ex = e
  end
  Rake::Task['ciat:compiler'].invoke
  fail e if e
end

namespace :ciat do
  CIAT::RakeTask.new(:focused) do |task|
    type = ENV['type'] || :interpreter
    if type == :interpreter
      task.processors << interpreter
    else
      task.processors << compiler
      task.processors << executor
    end
    task.folder = ENV['folder'] || 'ciat'
    task.report_title = "Focused Test: " + task.folder
    task.output_folder = "tmp/focused"
  end

  CIAT::RakeTask.new(:compiler) do |task|
    task.processors << compiler
    task.processors << executor
    task.report_title = "Hobbes Compiler"
    task.output_folder = "tmp/compiler"
  end

  CIAT::RakeTask.new(:interpreter) do |task|
    task.processors << interpreter
    task.report_title = "Hobbes Interpreter"
    task.output_folder = "tmp/interpreter"
  end
end

task :view do
  require 'launchy'
  Launchy.open("tmp/interpreter/report.html")
  Launchy.open("tmp/compiler/report.html")
  Launchy.open("tmp/focused/report.html")
end
